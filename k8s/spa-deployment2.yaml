apiVersion: apps/v1
kind: Deployment # Kubernetes resource kind we are creating
metadata:
  name: demo-deployment2
  namespace: default
  creationTimestamp: null
  labels:
    app: test
spec:
  replicas: 3 # Number of replicas that will be created for this deployment
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 25% # maximum how many new pods to be created at a given time during rolling update
      maxUnavailable: 25% # maximum how many old pods should be taken out at a given time during rolling update
  selector:
    matchLabels:
      app: test
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: test
    spec:
      containers:
        - name: test-spa-container
          image: kumaranisk/test-spa:v1 # Image that will be used to containers in the cluster
          #It is a good practice to declare resource requests and limits for both memory and cpu for each container.
          #This helps to schedule the container to a node that has available resources for your Pod,
          #and also so that your Pod does not use resources that other Pods needs
          resources:
            limits:
              cpu: "1"
              memory: "200Mi"
            requests:
              cpu: "500m"
              memory: "100Mi"
          #args: ["--cpu", "2"]
          imagePullPolicy: Always
          # imagePullPolicy: Never # if you are using local docker registry, not using docker registry like docker hub
          ports:
          - containerPort: 8080 # The port that the container is running on in the cluster
            name: test-spa-port # you can reference these names in the targetPort attribute of a Service
      terminationGracePeriodSeconds: 1
      restartPolicy: Always
